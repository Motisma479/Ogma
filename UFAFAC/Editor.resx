<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>